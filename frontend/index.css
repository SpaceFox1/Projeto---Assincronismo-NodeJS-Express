:root {
  /* Variables */
  --max-page-width: 1440px;
  --header-height: 4rem;
  --card-width: 35rem;

  /* Colors */
  --primary-color: #60ff0a;
  --black: #ffffff;
  --white: #241e1f;
  --gray:  #463a3c;
  --beige: #006248;
  --light-gray: #adadad;
  --green: #4c00a8;

  /* Functional Variables */
  --text-color: var(--white);
  --header-text-color: var(--primary-color);
  --page-background: var(--white);
  --header-background: var(--beige);

  --card-background: var(--beige);
  --card-text-color: var(--black);
  --card-title-color: var(--primary-color);
  --loading-color-overlay: #241e1fa4;
  --card-button-bg: var(--primary-color);
  --card-button-text-color: var(--white);

  --modal-backdrop: #241e1fa4;
  --modal-background: var(--beige);
  --modal-text-color: var(--black);
  --modal-input-background: var(--white);
  --modal-input-text-color: var(--black);
  --modal-input-placeholder-text-color: var(--black);
  --modal-title-text-color: var(--primary-color);

  --card-confirmed-background: var(--green);
  --card-date-color: var(--light-gray);
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html, body {
  background: var(--page-background);
  width: 100%;
  max-width: var(--max-page-width);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: 16px;
  color: var(--text-color);
  margin: auto;
  padding: 0;
}

#header {
  width: 100%;
  height: var(--header-height);
  background-color: var(--header-background);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding-inline: 1rem;
  align-items: center;
  color: var(--header-text-color);
  position: sticky;
  top: 0;
  z-index: 1000;
}

#header::before {
  content: '';
  width: 100vw;
  height: var(--header-height);
  background: var(--header-background);
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  position: fixed;
  z-index: -1;
}

#content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
}

#matches {
  display: grid;
  grid-template-columns: repeat(auto-fit, var(--card-width));
  justify-content: space-evenly;
  gap: 1rem;
  overflow-x: hidden;
}

.sectionTitle {
  color: var(--black);
  width: fit-content;
}

.matchCard {
  width: 100%;
  height: 100%;
  overflow: hidden;
  padding-bottom: 1rem;
  border-radius: 1rem;
  display: grid;
  grid-template-rows: auto 1fr auto;
  gap: 1rem;
  background: var(--card-background);
  color: var(--card-text-color);
  position: relative;
  isolation: isolate;
}

.matchCard.loading::before {
  content: '';
  inset: 0;
  position: absolute;
  z-index: 10;
  background: var(--loading-color-overlay);
}

.cardImageContainer {
  aspect-ratio: 21/9;
  width: 100%;
  height: auto;
  overflow: hidden;
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
  position: relative;
  isolation: isolate;
}

.cardImageContainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cardImageContainer .spinner {
  position: absolute;
  inset: 0;
  height: 50%;
  border-width: 0.5rem;
  margin: auto;
  z-index: -1;
}

.cardContent {
  padding-inline: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.cardTitle {
  color: var(--card-title-color);
  font-size: 2rem;
  text-align: left;
}

.cardDate {
  color: var(--card-date-color);
  font-size: 0.95rem;
  text-transform: capitalize;
}

.cardDescription {
  color: var(--card-text-color);
  font-size: 1rem;
}

.cardButtonsContainer {
  padding-inline: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.spinner {
  width: auto;
  aspect-ratio: 1;
  height: 1rem;
  border: 0.15rem solid transparent;
  border-top-color: var(--modal-text-color);
  border-radius: 100vw;
  animation: spinner 1s linear infinite;
  transition: height 0.15s ease, margin-right 0.15s ease;
  margin-right: 0.5rem;
}

.cardButton:not(.loading) .spinner {
  border: 0;
  opacity: 0;
  height: 0;
  margin-right: 0;
}

.headerbutton, .cardButton, .modalButton {
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  border-radius: 100vw;
  border: 0;
  background: var(--card-button-bg);
  color: var(--card-button-text-color);
  transition: filter 0.25s ease;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.headerbutton:hover, .cardButton:hover, .modalButton:hover {
  filter: drop-shadow(0 0 0.25rem var(--card-button-bg));
}

.headerbutton:active, .cardButton:active, .modalButton:active {
  filter: drop-shadow(0 0 0.5rem var(--card-button-bg));
}

.modalContainer {
  position: fixed;
  width: 100vw;
  height: 100vh;
  inset: 0;
  background: var(--modal-backdrop);
  z-index: 9999999;
  /* display: flex; */
  display: none;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

.modal {
  display: flex;
  flex-direction: column;
  width: min(35rem, 100%);
  margin: auto;
  max-height: fit-content;
  overflow-y: auto;
  padding: 1rem;
  background: var(--modal-background);
  color: var(--modal-text-color);
  border-radius: .5rem;
  gap: 0.5rem;
}

.modalTitle {
  font-size: 2rem;
  color: var(--modal-title-text-color);
  text-align: center;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.horizontal { 
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  justify-content: space-between;
  align-items: flex-end;
}

.input {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
  margin-top: 0;
  transition: margin-top 0.5s ease 0.5s;
}

.input:has(.inputElement:not(:placeholder-shown)) {
  margin-top: 1.5rem;
  transition: margin-top 0.5s ease;
}

.inputElement {
  width: 100%;
  padding: 0.5rem;
  border-radius: 0.5rem;
  border: 0;
  background: var(--modal-input-background);
  color: var(--modal-input-text-color);
  font-size: 1rem;
}

.inputLabel {
  position: absolute;
  top: 50%;
  left: 0.5rem;
  transform: translateY(-50%);
  font-size: 1rem;
  pointer-events: none;
  color: var(--modal-input-placeholder-text-color);
  transition: top 0.5s ease 0.25s, left 0.5s ease;
}

.input:has(.inputElement:not(:placeholder-shown)) .inputLabel {
  top: -0.75rem;
  left: 0;
  transition: top 0.5s ease, left 0.5s ease 0.25s;
}

.subtleButton {
  margin-block: auto;
  padding: 0.5rem 1rem;
  background: transparent;
  border: 1px solid var(--card-button-bg);
  border-radius: 100vw;
  cursor: pointer;
  font-size: 1rem;
  width: 100%;
  color: var(--modal-input-placeholder-text-color);
  transition: background 0.25s ease;
}

.subtleButton:hover {
  background: hsla(from var(--card-button-bg) h s l / 0.25);
}

.subtleButton:active {
  background: hsla(from var(--card-button-bg) h s l / 0.75);
}

.modalButton {
  width: 100%;
}

.modalButton:not(.loading) .spinner {
  height: 0;
  opacity: 0;
  margin-right: 0;
  border: 0;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

button:disabled {
  filter: grayscale() !important;
  cursor: not-allowed;
}

.guestList {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.guestListNewBox {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  order: 99999999;
}

.guestListInput {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
  margin-top: 0;
  transition: margin-top 0.5s ease 0.5s;
  border-radius: 1rem;
  border: 0;
  padding: 0.5rem;
}

.guestPerson {
  padding: 0.5rem;
  border-radius: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  border: 1px solid var(--card-confirmed-background);
}

.guestPerson.confirmed {
  background: var(--card-confirmed-background);
}